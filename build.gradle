buildscript {
	ext {
		kotlinVersion = '1.1.3-2'
		springBootVersion = '1.5.4.RELEASE'
		fuelVersion = '1.9.0'
	}
	repositories {
        mavenCentral()
    }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

bootRun {
	if (project.hasProperty('jvmArgs')) {
		jvmArgs project.jvmArgs.split('\\s+')
	}
}

repositories {
	mavenCentral()
    jcenter()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("com.github.kittinunf.fuel:fuel:${fuelVersion}")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7")

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}
